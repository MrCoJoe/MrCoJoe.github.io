import{_ as s,o as a,c as e,d as n}from"./app-nnBTm0Jw.js";const t="/assets/1730452413232-BTNenHG4.png",l="/assets/1730452601937-Apo9ujPp.png",p="/assets/1730452490030-NDuRyCeV.png",d="/assets/1730452293648-BeUGbylJ.png",r="/assets/1730452180060-C14Ipx6a.png",h="/assets/1730452200596-1aTvFHWk.png",o="/assets/1730453088615-DobmVvEt.png",g={};function c(k,i){return a(),e("div",null,i[0]||(i[0]=[n('<h1 id="sql优化记录" tabindex="-1"><a class="header-anchor" href="#sql优化记录"><span>SQL优化记录</span></a></h1><h4 id="尝试通过索引来优化查询记录" tabindex="-1"><a class="header-anchor" href="#尝试通过索引来优化查询记录"><span>尝试通过索引来优化查询记录</span></a></h4><p>这次在测试接口的过程中，发现有一张表的数据量达到了3W+，而使用的SQL语句则非常简单，基本上都得走全表扫描：</p><p>表结构如下，发现type和state基本上都是数值相同的字段</p><figure><img src="'+t+`" alt="1730452413232" tabindex="0" loading="lazy"><figcaption>1730452413232</figcaption></figure><p>SQL语句如下：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TYPE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,ID,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,SHORT_NAME,INPUTCODE1,INPUTCODE2,ICD,DIAG_ID,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">STATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> EMR_PUB_DIAGNOSE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> STATE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            AND</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> STATE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            AND</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TYPE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>尝试加上联合索引：</p><figure><img src="`+l+'" alt="1730452601937" tabindex="0" loading="lazy"><figcaption>1730452601937</figcaption></figure><p>加联合索引之前的查询效率：</p><figure><img src="'+p+'" alt="1730452490030" tabindex="0" loading="lazy"><figcaption>1730452490030</figcaption></figure><figure><img src="'+d+'" alt="1730452293648" tabindex="0" loading="lazy"><figcaption>1730452293648</figcaption></figure><p>在这之前我使用<strong>FLUSH QUERY CACHE来清除DB缓存</strong></p><p>加联合索引之后的查询效率：</p><figure><img src="'+r+'" alt="1730452180060" tabindex="0" loading="lazy"><figcaption>1730452180060</figcaption></figure><figure><img src="'+h+`" alt="1730452200596" tabindex="0" loading="lazy"><figcaption>1730452200596</figcaption></figure><p>看起来稍微快了点。</p><p>优化之前：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Projection_4,37556.00,root,&quot;&quot;,&quot;wdhis.emr_pub_diagnose.type, wdhis.emr_pub_diagnose.id, wdhis.emr_pub_diagnose.name, wdhis.emr_pub_diagnose.short_name, wdhis.emr_pub_diagnose.inputcode1, wdhis.emr_pub_diagnose.inputcode2, wdhis.emr_pub_diagnose.icd, wdhis.emr_pub_diagnose.diag_id, wdhis.emr_pub_diagnose.state&quot;</span></span>
<span class="line"><span>└─TableReader_7,37556.00,root,&quot;&quot;,data:Selection_6</span></span>
<span class="line"><span>  └─Selection_6,37556.00,cop[tikv],&quot;&quot;,&quot;eq(wdhis.emr_pub_diagnose.state, 1), eq(wdhis.emr_pub_diagnose.type, 1)&quot;</span></span>
<span class="line"><span>    └─TableFullScan_5,37560.00,cop[tikv],table:emr_pub_diagnose,keep order:false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="发现执行计划确实不走全表扫描了" tabindex="-1"><a class="header-anchor" href="#发现执行计划确实不走全表扫描了"><span>发现执行计划确实不走全表扫描了：</span></a></h6><figure><img src="`+o+'" alt="1730453088615" tabindex="0" loading="lazy"><figcaption>1730453088615</figcaption></figure><p>看来联合索引好像就算查询的字段是所有字段也可以优化查询。同时给查询条件加索引也可以优化查询。</p>',22)]))}const m=s(g,[["render",c],["__file","一次SQL优化记录.html.vue"]]),_=JSON.parse('{"path":"/doc/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E4%B8%80%E6%AC%A1SQL%E4%BC%98%E5%8C%96%E8%AE%B0%E5%BD%95.html","title":"SQL优化记录","lang":"zh-CN","frontmatter":{"feed":false,"seo":false,"head":[]},"headers":[],"git":{"createdTime":1731914741000,"updatedTime":1731914741000,"contributors":[{"name":"九歌天上有","email":"aruixrain@gmail.com","commits":1}]},"readingTime":{"minutes":1.01,"words":304},"filePathRelative":"doc/数据库/MySQL/一次SQL优化记录.md","localizedDate":"2024年11月18日"}');export{m as comp,_ as data};

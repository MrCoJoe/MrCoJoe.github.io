import{_ as i,o as a,c as n,d as l}from"./app-BSUomKXw.js";const e={};function p(d,s){return a(),n("div",null,s[0]||(s[0]=[l(`<h1 id="sql优化" tabindex="-1"><a class="header-anchor" href="#sql优化"><span>SQL优化</span></a></h1><div class="language-pgsql line-numbers-mode" data-highlighter="shiki" data-ext="pgsql" data-title="pgsql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>SELECT FEE_TYPE,SUM(\${@com.kingtsoft.kingpower.frame.utils.core.DBUtil@getNull()}(AMOUNT,0)) AMOUNT</span></span>
<span class="line"><span>        FROM</span></span>
<span class="line"><span>        (</span></span>
<span class="line"><span>        SELECT AMOUNT,</span></span>
<span class="line"><span>        (SELECT CASE WHEN NAME LIKE &#39;%体检%&#39; OR NAME LIKE &#39;%磁共振%&#39; OR NAME LIKE &#39;%CT%&#39;OR NAME LIKE &#39;%放射%&#39;OR NAME LIKE &#39;%检查%&#39; THEN &#39;05&#39;</span></span>
<span class="line"><span>        WHEN NAME LIKE &#39;%治疗%&#39; THEN &#39;06&#39;</span></span>
<span class="line"><span>        WHEN NAME LIKE &#39;%手术%&#39; THEN &#39;07&#39;</span></span>
<span class="line"><span>        WHEN NAME LIKE &#39;%检验%&#39; THEN &#39;08&#39;</span></span>
<span class="line"><span>        WHEN NAME LIKE &#39;%材料%&#39; THEN &#39;09&#39;</span></span>
<span class="line"><span>        ELSE &#39;99&#39;END FROM ACC_DIC_FEE_CLASSIFY WHERE ID = B.CLASSIFY_ID) FEE_TYPE</span></span>
<span class="line"><span>         FROM OIS_BILL_DETAILS A,ACC_DIC_FEE_ITEM B</span></span>
<span class="line"><span>        WHERE A.FEE_ID = B.ID</span></span>
<span class="line"><span>        AND A.BILL_ID IN (SELECT BILL_ID FROM OIS_BILL WHERE OPC_ID = #{opcId} AND INVALID_TIME IS NULL)</span></span>
<span class="line"><span>        AND A.HT = &#39;C&#39;</span></span>
<span class="line"><span>        union all</span></span>
<span class="line"><span>        SELECT AMOUNT,</span></span>
<span class="line"><span>        (CASE WHEN b.TYPE =&#39;Y&#39; THEN &#39;01&#39;</span></span>
<span class="line"><span>        WHEN b.TYPE = &#39;Z&#39; THEN &#39;02&#39;</span></span>
<span class="line"><span>        WHEN b.TYPE = &#39;C&#39; THEN &#39;03&#39;</span></span>
<span class="line"><span>        ELSE &#39;99&#39; END) FEE_TYPE</span></span>
<span class="line"><span>        FROM OIS_BILL_DETAILS A,MMIS_DIC_MED B</span></span>
<span class="line"><span>        WHERE A.Mat_Id = B.ID</span></span>
<span class="line"><span>        AND B.TYPE IN (&#39;Y&#39;, &#39;Z&#39;, &#39;C&#39;)</span></span>
<span class="line"><span>        AND A.BILL_ID IN (SELECT BILL_ID FROM OIS_BILL WHERE OPC_ID = #{opcId} AND INVALID_TIME IS NULL)</span></span>
<span class="line"><span>        AND A.HT = &#39;C&#39;</span></span>
<span class="line"><span>        union all</span></span>
<span class="line"><span>        SELECT SUM(\${@com.kingtsoft.kingpower.frame.utils.core.DBUtil@getNull()}(AMOUNT,0)) AMOUNT,&#39;00&#39; FEE_TYPE</span></span>
<span class="line"><span>        FROM OIS_BILL_DETAILS A</span></span>
<span class="line"><span>        WHERE A.BILL_ID IN (SELECT BILL_ID FROM OIS_BILL WHERE OPC_ID = #{opcId} AND INVALID_TIME IS NULL)</span></span>
<span class="line"><span>        AND A.HT = &#39;C&#39;</span></span>
<span class="line"><span>        ) T</span></span>
<span class="line"><span>        GROUP BY FEE_TYPE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在子查询结果集上进行操作的查询是外部查询。</p><p>一些不认识的函数：</p><div class="language-pgsql line-numbers-mode" data-highlighter="shiki" data-ext="pgsql" data-title="pgsql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>COALESCE 函数是一个在 SQL 中用于处理空值的函数，它的语法如下：</span></span>
<span class="line"><span>COALESCE ( expression_1, expression_2,..., expression_n )</span></span>
<span class="line"><span>COALESCE 函数会依次检查每个表达式的值，并返回第一个非空的值。如果所有的表达式都为空值，则返回 NULL。</span></span>
<span class="line"><span>以下是一个使用 COALESCE 函数的示例：</span></span>
<span class="line"><span>假设有一个名为 employees 的表，其中包含 name、salary 和 bonus 三个列。如果 bonus 列的值为 NULL，我们希望使用 0 来代替。可以使用以下查询来实现：</span></span>
<span class="line"><span>SELECT name, salary, COALESCE(bonus, 0) AS bonus FROM employees;</span></span>
<span class="line"><span>在这个查询中，COALESCE 函数会检查 bonus 列的值。如果 bonus 列的值不为 NULL，它将返回该值；否则，它将返回 0。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-pgsql line-numbers-mode" data-highlighter="shiki" data-ext="pgsql" data-title="pgsql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>在 SQL 中，EXTRACT()是一个用于从日期时间值中提取特定部分（如年、月、日、小时等）的函数。</span></span>
<span class="line"><span>其语法通常为：EXTRACT(unit FROM datetime_expression)。</span></span>
<span class="line"><span>其中，unit是要提取的时间部分，可以是YEAR（年）、MONTH（月）、DAY（日）、HOUR（小时）、MINUTE（分钟）、SECOND（秒）等；datetime_expression是一个日期时间类型的表达式，可以是一个日期时间列、一个函数返回的日期时间值或一个常量日期时间值。</span></span>
<span class="line"><span>例如：</span></span>
<span class="line"><span>sql</span></span>
<span class="line"><span>复制</span></span>
<span class="line"><span>SELECT EXTRACT(YEAR FROM &#39;2023-10-29&#39;::date) AS year_value;</span></span>
<span class="line"><span>-- 返回结果为 2023</span></span>
<span class="line"><span>这个函数在处理日期时间数据时非常有用，可以方便地获取特定的时间部分进行分析或计算。不同的数据库系统可能对EXTRACT()函数的支持略有不同，但基本用法相似。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>什么是外部查询：</p><blockquote><p>在 SQL 中，聚合函数是对一组值进行计算并返回单一值的函数。当聚合函数出现在查询的 SELECT 子句中，且不是在子查询中时，就称为外部聚合函数。外部聚合函数用于对整个查询结果集进行聚合操作。</p></blockquote><p>区分外查询和子查询：</p><ul><li><strong>查询每个部门的平均薪资</strong> ：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> department_id, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> AVG</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(salary) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> employees </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> department_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">department_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> average_salary</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> employees e</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">GROUP BY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> department_id;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>查询每个班级的学生人数</strong> ：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> class_id, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> COUNT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(*) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> students </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> class_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">class_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> student_count</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> students s</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">GROUP BY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> class_id;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>查询每个城市的订单总金额</strong> ：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> city, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> SUM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(amount) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> orders </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> city </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> o</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">city</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> total_amount</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> orders o</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">GROUP BY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> city;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>查询每个产品类别的最高价格</strong> ：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> category_id, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> MAX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(price) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> products </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> category_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">category_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> max_price</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> products p</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">GROUP BY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> category_id;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>查询每个供应商的最低价格</strong> ：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> supplier_id, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> MIN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(price) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> products </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> supplier_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">supplier_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> min_price</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> products s</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">GROUP BY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> supplier_id;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="覆盖索引" tabindex="-1"><a class="header-anchor" href="#覆盖索引"><span>覆盖索引</span></a></h4><p>概念：一种在数据库中用于优化查询性能的索引结构，它与普通索引有所不同</p><ul><li>覆盖索引是指一个索引包含了（或覆盖了）满足查询语句中所需的所有字段，而不需要再去访问数据表中的原始数据行。也就是说，当查询的列都可以从索引中直接获取时，就无需回表查询数据行，从而提高查询效率。</li></ul><p><strong>优点</strong></p><ul><li><strong>提高查询性能</strong> ：由于避免了回表操作，减少了数据的读取量和 I/O 操作，因此可以显著提高查询的速度，尤其是在处理大量数据时效果更为明显。</li><li><strong>减少磁盘 I/O</strong> ：因为不需要从磁盘读取完整的数据行，只需要读取索引中的数据，所以减少了磁盘 I/O 的开销，提高了系统的整体性能。</li><li><strong>降低数据库负载</strong> ：覆盖索引可以减少数据库服务器的负载，因为它需要处理的数据量更少，从而可以提高数据库的并发处理能力。</li></ul><p><strong>缺点</strong></p><ul><li><strong>索引占用空间大</strong> ：由于覆盖索引包含了更多的列，因此它占用的磁盘空间通常会比普通索引大。</li><li><strong>维护成本高</strong> ：当数据表中的数据发生变化时，覆盖索引也需要进行相应的更新，这可能会增加维护索引的成本。</li></ul><p>覆盖索引是一个大类，他的名下具有很多别的索引，例如（たどえば）</p><ul><li><strong>联合索引</strong> ：如果为表中的多个字段创建了联合索引，并且查询语句中只需要获取这些索引字段的值，那么这个联合索引就是覆盖索引。例如，为 <code>employees</code>表的 <code>name</code>、<code>age</code>和 <code>department</code>字段创建了联合索引 <code>idx_name_age_department</code>，当执行查询语句 <code>SELECT name, age, department FROM employees WHERE age &gt; 30</code>时，这个联合索引就是覆盖索引，因为查询所需的列都包含在索引中，无需回表查询数据行。</li><li><strong>包含索引</strong> ：某些数据库支持创建包含索引，即索引中不仅包含索引键列，还可以包含其他非索引键列。如果查询语句中需要获取的列都包含在这个包含索引中，那么它就是覆盖索引。例如，在 <code>employees</code>表中创建了一个包含索引 <code>idx_name_age_include_salary</code>，其中包含了 <code>name</code>、<code>age</code>和 <code>salary</code>字段。当执行查询语句 <code>SELECT name, age, salary FROM employees WHERE age &gt; 30</code>时，这个包含索引就是覆盖索引。</li><li><strong>普通索引</strong> ：单个字段的普通索引也可以成为覆盖索引。例如，为 <code>employees</code>表的 <code>id</code>字段创建了普通索引 <code>idx_id</code>，当执行查询语句 <code>SELECT id FROM employees WHERE id = 1001</code>时，这个普通索引就是覆盖索引。</li></ul><p>要确定一个索引是否为覆盖索引，关键是看查询语句中需要获取的列是否都能够从该索引中直接获取，而无需再去访问数据表中的原始数据行。如果是，那么这个索引就是覆盖索引。</p><h4 id="普通索引" tabindex="-1"><a class="header-anchor" href="#普通索引"><span>普通索引</span></a></h4>`,30)]))}const h=i(e,[["render",p],["__file","SQL优化.html.vue"]]),k=JSON.parse('{"path":"/doc/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/SQL%E4%BC%98%E5%8C%96.html","title":"SQL优化","lang":"zh-CN","frontmatter":{"feed":false,"seo":false,"head":[]},"headers":[],"git":{"createdTime":1731914741000,"updatedTime":1731914741000,"contributors":[{"name":"九歌天上有","email":"aruixrain@gmail.com","commits":1}]},"readingTime":{"minutes":5.54,"words":1662},"filePathRelative":"doc/数据库/MySQL/SQL优化.md","localizedDate":"2024年11月18日"}');export{h as comp,k as data};

import{_ as n,o as a,c as e,d as i}from"./app-ux1ElDeN.js";const l={};function p(t,s){return a(),e("div",null,s[0]||(s[0]=[i(`<h1 id="xxl-job模块" tabindex="-1"><a class="header-anchor" href="#xxl-job模块"><span>xxl-job模块</span></a></h1><blockquote><h4 id="如何使用" tabindex="-1"><a class="header-anchor" href="#如何使用"><span>如何使用</span></a></h4></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>项目引入如下模块</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>xml</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>  &lt;groupId&gt;com.kingtsoft.pangu&lt;/groupId&gt;</span></span>
<span class="line"><span>  &lt;artifactId&gt;pangu-spring-xxl&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>配置文件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>yaml</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># xxl-job</span></span>
<span class="line"><span>xxl:</span></span>
<span class="line"><span>job:</span></span>
<span class="line"><span>admin:</span></span>
<span class="line"><span>### 调度中心部署根地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行&quot;执行器心跳注册&quot;和&quot;任务结果回调&quot;；为空则关闭自动注册；</span></span>
<span class="line"><span>addresses: &#39;http://10.1.50.131:8887/xxl-job-admin&#39;</span></span>
<span class="line"><span>### 执行器通讯TOKEN [选填]：非空时启用；</span></span>
<span class="line"><span>accessToken: default_token</span></span>
<span class="line"><span>executor:</span></span>
<span class="line"><span>### 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册</span></span>
<span class="line"><span>appname: xxl-job-executor-pangu</span></span>
<span class="line"><span>### 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。</span></span>
<span class="line"><span>address:</span></span>
<span class="line"><span>### 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 &quot;执行器注册&quot; 和 &quot;调度中心请求并触发任务&quot;；</span></span>
<span class="line"><span>ip:</span></span>
<span class="line"><span>### 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；</span></span>
<span class="line"><span>port: 9999</span></span>
<span class="line"><span>### 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；</span></span>
<span class="line"><span>logpath: \${user.home}/logs/pangu/xxl/jobhandler</span></span>
<span class="line"><span>### 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；</span></span>
<span class="line"><span>logretentiondays: 30</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><h4 id="技术原理" tabindex="-1"><a class="header-anchor" href="#技术原理"><span>技术原理</span></a></h4></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>这个模块并未做太多封装，初始化了执行器配置，内如下。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>java</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package com.kingtsoft.pangu.spring.xxl;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import com.xxl.job.core.executor.impl.XxlJobSpringExecutor;</span></span>
<span class="line"><span>import lombok.extern.slf4j.Slf4j;</span></span>
<span class="line"><span>import org.springframework.beans.factory.annotation.Value;</span></span>
<span class="line"><span>import org.springframework.context.annotation.Bean;</span></span>
<span class="line"><span>import org.springframework.context.annotation.Configuration;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/**</span></span>
<span class="line"><span> * Title: &lt;br&gt;</span></span>
<span class="line"><span> * Description: &lt;br&gt;</span></span>
<span class="line"><span> * Company: KingTang &lt;br&gt;</span></span>
<span class="line"><span> *</span></span>
<span class="line"><span> * @author 金炀</span></span>
<span class="line"><span> * @version 1.0</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>@Slf4j</span></span>
<span class="line"><span>@Configuration</span></span>
<span class="line"><span>public class  XxlJobAutoConfiguration {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Value(&quot;\${xxl.job.admin.addresses}&quot;)</span></span>
<span class="line"><span>private String adminAddresses;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Value(&quot;\${xxl.job.accessToken}&quot;)</span></span>
<span class="line"><span>private String accessToken;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Value(&quot;\${xxl.job.executor.appname}&quot;)</span></span>
<span class="line"><span>private String appname;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Value(&quot;\${xxl.job.executor.address}&quot;)</span></span>
<span class="line"><span>private String address;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Value(&quot;\${xxl.job.executor.ip}&quot;)</span></span>
<span class="line"><span>private String ip;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Value(&quot;\${xxl.job.executor.port}&quot;)</span></span>
<span class="line"><span>privateint port;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Value(&quot;\${xxl.job.executor.logpath}&quot;)</span></span>
<span class="line"><span>private String logPath;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Value(&quot;\${xxl.job.executor.logretentiondays}&quot;)</span></span>
<span class="line"><span>privateint logRetentionDays;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Bean</span></span>
<span class="line"><span>public XxlJobSpringExecutor xxlJobExecutor() {</span></span>
<span class="line"><span>        log.info(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job config init.&quot;);</span></span>
<span class="line"><span>        XxlJobSpringExecutor xxlJobSpringExecutor =newXxlJobSpringExecutor();</span></span>
<span class="line"><span>        xxlJobSpringExecutor.setAdminAddresses(adminAddresses);</span></span>
<span class="line"><span>        xxlJobSpringExecutor.setAppname(appname);</span></span>
<span class="line"><span>        xxlJobSpringExecutor.setAddress(address);</span></span>
<span class="line"><span>        xxlJobSpringExecutor.setIp(ip);</span></span>
<span class="line"><span>        xxlJobSpringExecutor.setPort(port);</span></span>
<span class="line"><span>        xxlJobSpringExecutor.setAccessToken(accessToken);</span></span>
<span class="line"><span>        xxlJobSpringExecutor.setLogPath(logPath);</span></span>
<span class="line"><span>        xxlJobSpringExecutor.setLogRetentionDays(logRetentionDays);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>return xxlJobSpringExecutor;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)]))}const d=n(l,[["render",p],["__file","xxl-job模块.html.vue"]]),c=JSON.parse('{"path":"/%E7%9B%98%E5%8F%A4/%E7%BB%84%E4%BB%B6%E4%BB%8B%E7%BB%8D/xxl-job%E6%A8%A1%E5%9D%97.html","title":"xxl-job模块","lang":"zh-CN","frontmatter":{"description":"xxl-job模块 如何使用 xml yaml 技术原理 java","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/%E7%9B%98%E5%8F%A4/%E7%BB%84%E4%BB%B6%E4%BB%8B%E7%BB%8D/xxl-job%E6%A8%A1%E5%9D%97.html"}],["meta",{"property":"og:title","content":"xxl-job模块"}],["meta",{"property":"og:description","content":"xxl-job模块 如何使用 xml yaml 技术原理 java"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-18T07:25:41.000Z"}],["meta",{"property":"article:author","content":"Cotton Eye Joe"}],["meta",{"property":"article:modified_time","content":"2024-11-18T07:25:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"xxl-job模块\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-18T07:25:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cotton Eye Joe\\",\\"url\\":\\"https://github.com/ToDreamr\\"}]}"]]},"headers":[],"git":{"createdTime":1731914741000,"updatedTime":1731914741000,"contributors":[{"name":"九歌天上有","email":"aruixrain@gmail.com","commits":1}]},"readingTime":{"minutes":1.84,"words":551},"filePathRelative":"盘古/组件介绍/xxl-job模块.md","localizedDate":"2024年11月18日","excerpt":"","autoDesc":true}');export{d as comp,c as data};

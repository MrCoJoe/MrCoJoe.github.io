import{_ as n,o as a,c as i,d as e}from"./app-Cj6OPNEL.js";const l={};function p(d,s){return a(),i("div",null,s[0]||(s[0]=[e(`<h1 id="mongodb模块" tabindex="-1"><a class="header-anchor" href="#mongodb模块"><span>mongodb模块</span></a></h1><blockquote><h4 id="如何使用" tabindex="-1"><a class="header-anchor" href="#如何使用"><span>如何使用</span></a></h4></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>业务端引入模块</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>xml</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>  &lt;groupId&gt;com.kingtsoft.pangu&lt;/groupId&gt;</span></span>
<span class="line"><span>  &lt;artifactId&gt;pangu-data-mongodb&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>java</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package com.kingtsoft.pangu.data.mongodb.server.controller;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/**</span></span>
<span class="line"><span> * Title: &lt;br&gt;</span></span>
<span class="line"><span> * Description: &lt;br&gt;</span></span>
<span class="line"><span> * Company: KingTang &lt;br&gt;</span></span>
<span class="line"><span> *</span></span>
<span class="line"><span> * @author 金炀</span></span>
<span class="line"><span> * @version 1.0</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>@RestController</span></span>
<span class="line"><span>@RequestMapping(&quot;/mongodb&quot;)</span></span>
<span class="line"><span>public class  MongoController {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>private final   MongoBaseService&lt;TestMongo&gt; mongoMongoBaseService;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>private final   MongoTemplate mongoTemplate;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicMongoController(MongoTemplate mongoTemplate,</span></span>
<span class="line"><span>                           MongoBaseService&lt;TestMongo&gt; mongoMongoBaseService) {</span></span>
<span class="line"><span>this.mongoTemplate = mongoTemplate;</span></span>
<span class="line"><span>this.mongoMongoBaseService = mongoMongoBaseService;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @RequestMapping(&quot;/test&quot;)</span></span>
<span class="line"><span>public Object test(@RequestBody Map&lt;String, Object&gt; objectToSave) {</span></span>
<span class="line"><span>        TestMongo testMongo =newTestMongo();</span></span>
<span class="line"><span>        testMongo.setTestId(6);</span></span>
<span class="line"><span>        testMongo.setName(&quot;abc7&quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        TestMongo testMongo2 =newTestMongo();</span></span>
<span class="line"><span>        testMongo2.setTestId(6);</span></span>
<span class="line"><span>        Query query = MongodbUtil.buildQuery(testMongo2);</span></span>
<span class="line"><span>        Update update = MongodbUtil.buildUpdate(testMongo);</span></span>
<span class="line"><span>//        long  ret = mongoMongoBaseService.upsert(query, update, TestMongo.class);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//        List&lt;TestMongo&gt; a = new ArrayList&lt;&gt;();</span></span>
<span class="line"><span>//        a.add(testMongo);</span></span>
<span class="line"><span>//        long  ret = mongoMongoBaseService.updateBatchById(a, TestMongo.class);</span></span>
<span class="line"><span>        MongoPage&lt;TestMongo&gt; page =new MongoPage&lt;&gt;(1, 2);</span></span>
<span class="line"><span>        MongoPage&lt;TestMongo&gt; ret = mongoMongoBaseService.findPage(page, null, TestMongo.class);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        TestMongo ret2 = mongoMongoBaseService.getById(2, TestMongo.class);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>return JsonResult.create(ret);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>当然也可以直接注入MongoTemplate</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>java</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>public class  MongoBaseServiceImpl&lt;T&gt; implementsMongoBaseService&lt;T&gt; {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>private final   MongoTemplate mongoTemplate;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicMongoBaseServiceImpl(MongoTemplate mongoTemplate) {</span></span>
<span class="line"><span>this.mongoTemplate = mongoTemplate;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>public T save(T entity) {</span></span>
<span class="line"><span>// mongodb中的_id统一自定义设置, 否则手动抛出异常</span></span>
<span class="line"><span>        Assert.isTrue(MongodbUtil.existDocumentId(entity), &quot;请使用@Id标记文档ID键！&quot;);</span></span>
<span class="line"><span>return mongoTemplate.save(entity);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>无论哪种，泛型对象的定义，如果要使用根据主键相关的查询模式必须要有@Id注解，比如根据主键更新数据。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><h4 id="技术原理" tabindex="-1"><a class="header-anchor" href="#技术原理"><span>技术原理</span></a></h4></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>其实就是造了mongodb增删改的轮子</span></span>
<span class="line"><span>规定了常用接口在MongoBaseService</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>java</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package com.kingtsoft.pangu.data.mongodb;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import org.springframework.data.mongodb.core.query.Query;</span></span>
<span class="line"><span>import org.springframework.data.mongodb.core.query.Update;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.io.Serializable;</span></span>
<span class="line"><span>import java.util.Collection;</span></span>
<span class="line"><span>import java.util.List;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/**</span></span>
<span class="line"><span> * Title: &lt;br&gt;</span></span>
<span class="line"><span> * Description: &lt;br&gt;</span></span>
<span class="line"><span> * Company: KingTang &lt;br&gt;</span></span>
<span class="line"><span> *</span></span>
<span class="line"><span> * @author 金炀</span></span>
<span class="line"><span> * @version 1.0</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>public interface  MongoBaseService&lt;T&gt; {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 单个插入 _id已存在会做覆盖,原本有值的字段可能会被置null</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramentity 实体</span></span>
<span class="line"><span>     * @return 全信息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    T save(T entity);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 批量插入 _id已存在会做覆盖,原本有值的字段可能会被置null</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramentityList 实体集合</span></span>
<span class="line"><span>     * @return 全信息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    List&lt;T&gt; insertBatch(Collection&lt;T&gt; entityList, Class&lt;?&gt; clazz);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 单个更新</span></span>
<span class="line"><span>     * 根据id进行更新</span></span>
<span class="line"><span>     * 没有任何一个字段做更新不做处理, 否则会将除_id外的字段都置null</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramentity 实体</span></span>
<span class="line"><span>     * @return 是否更新成功</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>boolean  updateById(T entity, Class&lt;?&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 批量更新</span></span>
<span class="line"><span>     * 根据id进行更新</span></span>
<span class="line"><span>     * 没有任何一个字段做更新不做处理, 否则会将除_id外的字段都置null</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramentityList  实体集合</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 更新数据条数</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>long updateBatchById(Collection&lt;T&gt; entityList, Class&lt;?&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 按条件更新</span></span>
<span class="line"><span>     * 自定义条件</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramquery       条件结构</span></span>
<span class="line"><span>     * @paramupdate      更新结构</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 更新数据条数</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>long update(Query query, Update update, Class&lt;?&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 插入或更新</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramquery       条件结构</span></span>
<span class="line"><span>     * @paramupdate      更新结构</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 更新数据条数</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>long upsert(Query query, Update update, Class&lt;?&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 删除 根据id进行删除</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramid          ID数据</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 是否成功</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>boolean  deleteById(Object id, Class&lt;?&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 删除 根据条件进行删除</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramt          条件数据</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 是否成功</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>long deleteByCondition(T t, Class&lt;?&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 批量删除 根据id进行删除</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramids         ID集合</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 作用条数</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>long deleteByIds(Collection&lt;?extendsSerializable&gt; ids, Class&lt;?&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 单个查询 根据id进行查询</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramid          ID数据</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 实体数据</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    T getById(Object id, Class&lt;T&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 批量查询 根据id进行查询</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramids         ID集合</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 实体集合</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    List&lt;T&gt; listByIds(Collection&lt;?extendsSerializable&gt; ids, Class&lt;T&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 按实体条件查询</span></span>
<span class="line"><span>     * 非空字段会组装成条件进行查询</span></span>
<span class="line"><span>     * 只支持(基本数据类型)字段=条件查询, 参考: MongodbUtil.isPrimitive</span></span>
<span class="line"><span>     * 不支持排序</span></span>
<span class="line"><span>     * 不支持分页</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramentity      实体对象（将组装成查询结构体）</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 实体信息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    List&lt;T&gt; query(T entity, Class&lt;T&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 条件查询</span></span>
<span class="line"><span>     * 自定义条件</span></span>
<span class="line"><span>     * 支持分页</span></span>
<span class="line"><span>     * 支持排序</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramquery       查询结构体</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 实体集合</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    List&lt;T&gt; query(Query query, Class&lt;T&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 查询一条数据 自定义条件</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramquery       查询条件</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 实体数据</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    T getOne(Query query, Class&lt;T&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 查询分页数据</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @parampage        分页数据</span></span>
<span class="line"><span>     * @paramquery       查询条件</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 实体数据</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    MongoPage&lt;T&gt; findPage(MongoPage&lt;T&gt; page, Query query, Class&lt;T&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 查询分页数据</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @parampage        分页数据</span></span>
<span class="line"><span>     * @paramt           查询条件</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 实体数据</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    MongoPage&lt;T&gt; findPageByCondition(MongoPage&lt;T&gt; page,T t, Class&lt;T&gt; entityClass);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 获取总数</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramquery       查询条件</span></span>
<span class="line"><span>     * @paramentityClass 实体类型</span></span>
<span class="line"><span>     * @return 实体数据</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>long count(Query query, Class&lt;T&gt; entityClass);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>官网操作</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><a href="https://www.mongodb.com/docs/manual/reference/operator/query/" target="_blank" rel="noopener noreferrer">https://www.mongodb.com/docs/manual/reference/operator/query/</a></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>参考文章</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><a href="https://www.cnblogs.com/luoxiao1104/p/15145686.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/luoxiao1104/p/15145686.html</a></p>`,19)]))}const r=n(l,[["render",p],["__file","mongodb.html.vue"]]),t=JSON.parse('{"path":"/%E7%9B%98%E5%8F%A4/%E4%B8%AD%E9%97%B4%E4%BB%B6/mongodb.html","title":"mongodb模块","lang":"zh-CN","frontmatter":{"description":"mongodb模块 如何使用 xml java java 技术原理 java https://www.mongodb.com/docs/manual/reference/operator/query/ https://www.cnblogs.com/luoxiao1104/p/15145686.html","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/%E7%9B%98%E5%8F%A4/%E4%B8%AD%E9%97%B4%E4%BB%B6/mongodb.html"}],["meta",{"property":"og:title","content":"mongodb模块"}],["meta",{"property":"og:description","content":"mongodb模块 如何使用 xml java java 技术原理 java https://www.mongodb.com/docs/manual/reference/operator/query/ https://www.cnblogs.com/luoxiao1104/p/15145686.html"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-18T07:25:41.000Z"}],["meta",{"property":"article:author","content":"Cotton Eye Joe"}],["meta",{"property":"article:modified_time","content":"2024-11-18T07:25:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mongodb模块\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-18T07:25:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cotton Eye Joe\\",\\"url\\":\\"https://github.com/ToDreamr\\"}]}"]]},"headers":[],"git":{"createdTime":1731914741000,"updatedTime":1731914741000,"contributors":[{"name":"九歌天上有","email":"aruixrain@gmail.com","commits":1}]},"readingTime":{"minutes":3.65,"words":1095},"filePathRelative":"盘古/中间件/mongodb.md","localizedDate":"2024年11月18日","excerpt":"","autoDesc":true}');export{r as comp,t as data};

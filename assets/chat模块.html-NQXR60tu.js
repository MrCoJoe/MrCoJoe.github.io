import{_ as s,o as a,c as i,d as e}from"./app-Bym8v7z8.js";const l={};function p(c,n){return a(),i("div",null,n[0]||(n[0]=[e(`<h1 id="chat模块" tabindex="-1"><a class="header-anchor" href="#chat模块"><span>chat模块</span></a></h1><blockquote><h4 id="如何使用" tabindex="-1"><a class="header-anchor" href="#如何使用"><span>如何使用</span></a></h4></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>后端</span></span>
<span class="line"><span>业务项目依赖如下的pangu-frame-chat-api模块</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>xml</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;com.kingtsoft.pangu&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;pangu-frame-chat-api&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>业务的启动器依赖如下的pangu-frame-chat模块</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>xml</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;com.kingtsoft.pangu&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;pangu-frame-chat&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>配置chat 的客户端实现，用于获取中心端发送的消息信息&amp;信息发送接口</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>java</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package com.kingtsoft.pangu.frame.simple.test.listener;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import com.kingtsoft.pangu.frame.chat.api.PgChatClientApi;</span></span>
<span class="line"><span>import com.kingtsoft.pangu.frame.chat.api.PgChatTemplate;</span></span>
<span class="line"><span>import com.kingtsoft.pangu.frame.chat.common.PgChatEntity;</span></span>
<span class="line"><span>import lombok.extern.slf4j.Slf4j;</span></span>
<span class="line"><span>import org.springframework.stereotype.Component;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.util.HashMap;</span></span>
<span class="line"><span>import java.util.List;</span></span>
<span class="line"><span>import java.util.Map;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/**</span></span>
<span class="line"><span> * Title: &lt;br&gt;</span></span>
<span class="line"><span> * Description: &lt;br&gt;</span></span>
<span class="line"><span> * Company: KingTang &lt;br&gt;</span></span>
<span class="line"><span> *</span></span>
<span class="line"><span> * @author 金炀</span></span>
<span class="line"><span> * @version 1.0</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>@Slf4j</span></span>
<span class="line"><span>@Component</span></span>
<span class="line"><span>public class  PgChatClientImplimplementsPgChatClientApi {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>private final   PgChatTemplate pgChatTemplate;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicPgChatClientImpl(PgChatTemplate pgChatTemplate) {</span></span>
<span class="line"><span>this.pgChatTemplate = pgChatTemplate;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 业务端消息信息处理</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramchatList 消息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>private void   doChatProcess(List&lt;PgChatEntity&gt; chatList) {</span></span>
<span class="line"><span>for (PgChatEntity pgChatEntity : chatList) {</span></span>
<span class="line"><span>try {</span></span>
<span class="line"><span>                System.out.println(pgChatEntity.getContext());</span></span>
<span class="line"><span></span></span>
<span class="line"><span>                Map&lt;String, Object&gt; m =new HashMap&lt;&gt;(4);</span></span>
<span class="line"><span>                m.put(&quot;empId&quot;, 1);</span></span>
<span class="line"><span>                pgChatTemplate.sendChat(&quot;pangu&quot;, &quot;群发了&quot;, 1, m);</span></span>
<span class="line"><span>            } catch (Exception e) {</span></span>
<span class="line"><span>                log.error(&quot;日志业务端数据处理失败！&quot;, e);</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>PgChatTemplate类</span></span>
<span class="line"><span>    topicCode为消息主题代码，主要让中心端识别是哪个模块过来的，比如经济可以是emis，</span></span>
<span class="line"><span>但是也可以降级，比如一个挂号一个主题叫register（注意，并非kafka主题，这里中心端的</span></span>
<span class="line"><span>kafka主题是固定的）。若调用了不带topicCode的方法，会使用pangu.chat.topic-code</span></span>
<span class="line"><span>配置所配置的内容，可以在项目配置文件内配置。（一般配常量类里）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>java</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package com.kingtsoft.pangu.frame.chat.api;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.util.List;</span></span>
<span class="line"><span>import java.util.Map;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/**</span></span>
<span class="line"><span> * Title: &lt;br&gt;</span></span>
<span class="line"><span> * Description: &lt;br&gt;</span></span>
<span class="line"><span> * Company: KingTang &lt;br&gt;</span></span>
<span class="line"><span> *</span></span>
<span class="line"><span> * @author 金炀</span></span>
<span class="line"><span> * @version 1.0</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>public interface  PgChatTemplate {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramcontext 信息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String context);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramcontext 信息</span></span>
<span class="line"><span>     * @paramtimeout 有效时间（毫秒）</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String context, long timeout);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramcontext  信息</span></span>
<span class="line"><span>     * @parammetaInfo 附加信息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String context, Map&lt;String, Object&gt; metaInfo);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramcontext  信息</span></span>
<span class="line"><span>     * @parammetaInfo 附加信息</span></span>
<span class="line"><span>     * @paramtimeout  有效时间（毫秒）</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String context, Map&lt;String, Object&gt; metaInfo, long timeout);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @parammetaInfos 附加信息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String context, List&lt;Map&lt;String, Object&gt;&gt; metaInfos);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @parammetaInfos 附加信息</span></span>
<span class="line"><span>     * @paramtimeout   有效时间（毫秒）</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String context, List&lt;Map&lt;String, Object&gt;&gt; metaInfos, long timeout);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramtopicCode 主题信息</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String topicCode, String context);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramtopicCode 主题信息</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @paramtimeout   有效时间（毫秒）</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String topicCode, String context, long timeout);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramtopicCode 主题信息</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @parammetaInfo  附加信息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String topicCode, String context, Map&lt;String, Object&gt; metaInfo);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramtopicCode 主题信息</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @parammetaInfo  附加信息</span></span>
<span class="line"><span>     * @paramtimeout   有效时间（毫秒）</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String topicCode, String context, Map&lt;String, Object&gt; metaInfo, long timeout);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramtopicCode 主题信息</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @parammetaInfos 附加信息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String topicCode, String context, List&lt;Map&lt;String, Object&gt;&gt; metaInfos);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramtopicCode 主题信息</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @parammetaInfos 附加信息</span></span>
<span class="line"><span>     * @paramtimeout   有效时间（毫秒）</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String topicCode, String context, List&lt;Map&lt;String, Object&gt;&gt; metaInfos, long timeout);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramtopicCode 主题信息</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @parammsgType   信息类型 1-转发指定客户端 2-同组转发</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String topicCode, String context, Integer msgType);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramtopicCode 主题信息</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @parammsgType   信息类型 1-转发指定客户端 2-同组转发</span></span>
<span class="line"><span>     * @paramtimeout   有效时间（毫秒）</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String topicCode, String context, Integer msgType, long timeout);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramtopicCode 主题信息</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @parammsgType   信息类型 1-转发指定客户端 2-同组转发</span></span>
<span class="line"><span>     * @parammetaInfo  附加信息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String topicCode, String context, Integer msgType, Map&lt;String, Object&gt; metaInfo);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramtopicCode 主题信息</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @parammsgType   信息类型 1-转发指定客户端 2-同组转发</span></span>
<span class="line"><span>     * @parammetaInfo  附加信息</span></span>
<span class="line"><span>     * @paramtimeout   有效时间（毫秒）</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String topicCode, String context, Integer msgType, Map&lt;String, Object&gt; metaInfo, long timeout);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramtopicCode 主题信息</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @parammsgType   信息类型 1-转发指定客户端 2-同组转发</span></span>
<span class="line"><span>     * @parammetaInfos 附加信息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String topicCode, String context, Integer msgType, List&lt;Map&lt;String, Object&gt;&gt; metaInfos);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramtopicCode 主题信息</span></span>
<span class="line"><span>     * @paramcontext   信息</span></span>
<span class="line"><span>     * @parammsgType   信息类型 1-转发指定客户端 2-同组转发</span></span>
<span class="line"><span>     * @parammetaInfos 附加信息</span></span>
<span class="line"><span>     * @paramtimeout   有效时间（毫秒）</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>voidsendChat(String topicCode, String context, Integer msgType, List&lt;Map&lt;String, Object&gt;&gt; metaInfos, long timeout);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>配置文件</span></span>
<span class="line"><span>    配置kafka (chat-clients中配置的为客户端监听会启动自动监听模式，开启后才会回调clientCode所对应的</span></span>
<span class="line"><span>bean名称的PgChatClientApi接口实现，key为监听ID，topics为监听的主题信息，多个以逗号分隔。group为分组。</span></span>
<span class="line"><span>pangu.kafka.topics 的配置用于主题信息的动态生成)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yaml</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>spring:</span></span>
<span class="line"><span>kafka:</span></span>
<span class="line"><span>bootstrap-servers: &#39;10.1.50.131:9092&#39;</span></span>
<span class="line"><span>pangu:</span></span>
<span class="line"><span>chat:</span></span>
<span class="line"><span>kafka:</span></span>
<span class="line"><span>topic-center: &#39;topic.frame.center&#39;</span></span>
<span class="line"><span>chat-clients:</span></span>
<span class="line"><span>pangu:</span></span>
<span class="line"><span>topics: &#39;topic.frame.client&#39;</span></span>
<span class="line"><span>group: &#39;mainGroup&#39;</span></span>
<span class="line"><span>clientCode: &#39;pgChatClientImpl&#39;</span></span>
<span class="line"><span>emis:</span></span>
<span class="line"><span>topics: &#39;topic.emis.client&#39;</span></span>
<span class="line"><span>group: &#39;mainGroup&#39;</span></span>
<span class="line"><span>clientCode: &#39;pgChatClientImpl&#39;</span></span>
<span class="line"><span>kafka:</span></span>
<span class="line"><span>servers: \${spring.kafka.bootstrap-servers}</span></span>
<span class="line"><span>retries: 1</span></span>
<span class="line"><span>batch-size: 16384</span></span>
<span class="line"><span>linger: 1</span></span>
<span class="line"><span>buffer-memory: 1024000</span></span>
<span class="line"><span>group-id: bootKafka</span></span>
<span class="line"><span>auto-commit: true</span></span>
<span class="line"><span>commit-interval: 100</span></span>
<span class="line"><span>session-timeout: 15000</span></span>
<span class="line"><span>topics:</span></span>
<span class="line"><span>pangu:</span></span>
<span class="line"><span>name: &#39;topic.frame.client&#39;</span></span>
<span class="line"><span>num-partitions: 2</span></span>
<span class="line"><span>replication-factor: 2</span></span>
<span class="line"><span>panguCenter:</span></span>
<span class="line"><span>name: &#39;topic.emis.client&#39;</span></span>
<span class="line"><span>num-partitions: 2</span></span>
<span class="line"><span>replication-factor: 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>ws中心端部署</span></span>
<span class="line"><span>    chat平台端模块为pangu-frame-chat-server，可直接部署于一个box之中,其配置文件如下</span></span>
<span class="line"><span>(pangu.kafka.topics 的配置用于主题信息的动态生成, auto-listener 下的为自动监听配置。</span></span>
<span class="line"><span>这里需要把所有客户端也配置进去，目前当作信息列表使用。后续有可能考虑自动发现)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yaml</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>spring:</span></span>
<span class="line"><span>kafka:</span></span>
<span class="line"><span>bootstrap-servers: &#39;10.1.50.131:9092&#39;</span></span>
<span class="line"><span>pangu:</span></span>
<span class="line"><span>kafka:</span></span>
<span class="line"><span>servers: \${spring.kafka.bootstrap-servers}</span></span>
<span class="line"><span>retries: 1</span></span>
<span class="line"><span>batch-size: 16384</span></span>
<span class="line"><span>linger: 1</span></span>
<span class="line"><span>buffer-memory: 1024000</span></span>
<span class="line"><span>group-id: bootKafka</span></span>
<span class="line"><span>auto-commit: true</span></span>
<span class="line"><span>commit-interval: 100</span></span>
<span class="line"><span>session-timeout: 15000</span></span>
<span class="line"><span>topics:</span></span>
<span class="line"><span>panguCenter:</span></span>
<span class="line"><span>name: &#39;topic.frame.center&#39;</span></span>
<span class="line"><span>num-partitions: 2</span></span>
<span class="line"><span>replication-factor: 2</span></span>
<span class="line"><span>pangu:</span></span>
<span class="line"><span>name: &#39;topic.frame.client&#39;</span></span>
<span class="line"><span>num-partitions: 2</span></span>
<span class="line"><span>replication-factor: 2</span></span>
<span class="line"><span>panguEmis:</span></span>
<span class="line"><span>name: &#39;topic.emis.client&#39;</span></span>
<span class="line"><span>num-partitions: 2</span></span>
<span class="line"><span>replication-factor: 2</span></span>
<span class="line"><span>auto-listener:</span></span>
<span class="line"><span>enabled: true</span></span>
<span class="line"><span>auto-topics:</span></span>
<span class="line"><span>panguCenter:</span></span>
<span class="line"><span>topics: &#39;topic.frame.center&#39;</span></span>
<span class="line"><span>group: &#39;mainGroup&#39;</span></span>
<span class="line"><span>serviceCode: &#39;pgChatCenter&#39;</span></span>
<span class="line"><span>ws:</span></span>
<span class="line"><span>enabled: true</span></span>
<span class="line"><span>host: 127.0.0.1</span></span>
<span class="line"><span>port: 8185</span></span>
<span class="line"><span>path: pangu-websocket</span></span>
<span class="line"><span>#下面这部分为wss需要开启，证书必须为权威认证，自生成的不行</span></span>
<span class="line"><span>ssl:</span></span>
<span class="line"><span>enabled: false</span></span>
<span class="line"><span>password: kingtang</span></span>
<span class="line"><span>key-store: &#39;classpath:server.keystore&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>前端代码(执行必要的心跳机制及各个钩子回调)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>typescript</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>import { Injectable } from&#39;@angular/core&#39;;</span></span>
<span class="line"><span>import { WebsocketStorageService } from&#39;@services/websocket-storage.service&#39;;</span></span>
<span class="line"><span>import { SettingsService } from&#39;@services/settings.service&#39;;</span></span>
<span class="line"><span>import { PermissionService } from&#39;@services/permission.service&#39;;</span></span>
<span class="line"><span>import { Router } from&#39;@angular/router&#39;;</span></span>
<span class="line"><span>import { NzMessageService } from&#39;_ng-zorro-antd@13.3.2@ng-zorro-antd/message&#39;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Injectable()</span></span>
<span class="line"><span>exportclassInitService {</span></span>
<span class="line"><span>constructor(</span></span>
<span class="line"><span>privatewsStorage:WebsocketStorageService,</span></span>
<span class="line"><span>privatesetting:SettingsService,</span></span>
<span class="line"><span>privatepermissionService:PermissionService,</span></span>
<span class="line"><span>privaterouter:Router,</span></span>
<span class="line"><span>privatemessage:NzMessageService</span></span>
<span class="line"><span>  ) {</span></span>
<span class="line"><span>if (window.location.pathname?.indexOf(&#39;micro-app&#39;) &gt;=0) {</span></span>
<span class="line"><span>this.router.navigateByUrl(&#39;/layout&#39;, { skipLocationChange: false }).then((_) =&gt; {});</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>beatCount:number=0;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>heartTimer:any;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>initApp():Promise&lt;any&gt; {</span></span>
<span class="line"><span>returnnewPromise((resolve, _) =&gt; {</span></span>
<span class="line"><span>this.doSocketInIt();</span></span>
<span class="line"><span>resolve(null);</span></span>
<span class="line"><span>    });</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>doSocketInIt() {</span></span>
<span class="line"><span>try {</span></span>
<span class="line"><span>if (typeof WebSocket ===&#39;undefined&#39;) {</span></span>
<span class="line"><span>        console.log(&#39;您的浏览器不支持socket&#39;);</span></span>
<span class="line"><span>      } else {</span></span>
<span class="line"><span>// 实例化socket</span></span>
<span class="line"><span>// @ts-ignore</span></span>
<span class="line"><span>        window.pgSocket =newWebSocket(window.uriMgt.websocketUrl);</span></span>
<span class="line"><span>// 监听socket连接</span></span>
<span class="line"><span>// @ts-ignore</span></span>
<span class="line"><span>        window.pgSocket.onopen =this.onSocketOpen;</span></span>
<span class="line"><span>// 监听socket错误信息</span></span>
<span class="line"><span>// @ts-ignore</span></span>
<span class="line"><span>        window.pgSocket.onerror =this.onSocketError;</span></span>
<span class="line"><span>// 监听socket消息</span></span>
<span class="line"><span>// @ts-ignore</span></span>
<span class="line"><span>        window.pgSocket.onmessage= (ret:MessageEvent) =&gt; {</span></span>
<span class="line"><span>if (ret.data) {</span></span>
<span class="line"><span>constdata:any=JSON.parse(ret.data);</span></span>
<span class="line"><span>            console.log(data.msgStr);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>switch (data.msgType) {</span></span>
<span class="line"><span>case1:</span></span>
<span class="line"><span>// @ts-ignore</span></span>
<span class="line"><span>                window.pgSocketKey = data.msgStr;</span></span>
<span class="line"><span>this.sendHeart();</span></span>
<span class="line"><span>this.beatCount =0;</span></span>
<span class="line"><span>break;</span></span>
<span class="line"><span>case2:</span></span>
<span class="line"><span>// 处理业务</span></span>
<span class="line"><span>break;</span></span>
<span class="line"><span>case3:</span></span>
<span class="line"><span>// 警告信息回调</span></span>
<span class="line"><span>this.message.warning(data.msgStr);</span></span>
<span class="line"><span>break;</span></span>
<span class="line"><span>case4:</span></span>
<span class="line"><span>if (this.beatCount &gt;=1) {</span></span>
<span class="line"><span>this.beatCount--;</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>break;</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>this.wsStorage.socketCallBack.next(JSON.parse(ret.data));</span></span>
<span class="line"><span>          }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// // @ts-ignore</span></span>
<span class="line"><span>// window.pgSocket.send(</span></span>
<span class="line"><span>//   JSON.stringify({</span></span>
<span class="line"><span>//     // @ts-ignore</span></span>
<span class="line"><span>//     key: window.pgSocketKey,</span></span>
<span class="line"><span>//     msgType: 3,</span></span>
<span class="line"><span>//     msgStr: &#39;业务测试！&#39;,</span></span>
<span class="line"><span>//   })</span></span>
<span class="line"><span>// );</span></span>
<span class="line"><span>        };</span></span>
<span class="line"><span>// @ts-ignore</span></span>
<span class="line"><span>        window.pgSocket.onclose= (ret:CloseEvent) =&gt; {</span></span>
<span class="line"><span>          console.log(ret);</span></span>
<span class="line"><span>if (this.heartTimer) {</span></span>
<span class="line"><span>clearInterval(this.heartTimer);</span></span>
<span class="line"><span>          }</span></span>
<span class="line"><span>this.beatCount =0;</span></span>
<span class="line"><span>        };</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    } catch (e:any) {</span></span>
<span class="line"><span>      console.error(&#39;websocket init fail&#39;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sendHeart() {</span></span>
<span class="line"><span>this.heartTimer =setInterval(() =&gt; {</span></span>
<span class="line"><span>// 中间可能存在延迟过长导致计数器过大，而没减小的可能，但是忽略</span></span>
<span class="line"><span>if (this.beatCount &gt;=4) {</span></span>
<span class="line"><span>        console.log(&#39;执行重连&#39;);</span></span>
<span class="line"><span>this.doSocketInIt();</span></span>
<span class="line"><span>      } else {</span></span>
<span class="line"><span>        console.log(&#39;ping&#39;+this.beatCount);</span></span>
<span class="line"><span>// @ts-ignore</span></span>
<span class="line"><span>        window.pgSocket.send(</span></span>
<span class="line"><span>JSON.stringify({</span></span>
<span class="line"><span>            module: &#39;pangu&#39;,</span></span>
<span class="line"><span>            msgType: 4,</span></span>
<span class="line"><span>            msgStr: &#39;ping&#39;,</span></span>
<span class="line"><span>          })</span></span>
<span class="line"><span>        );</span></span>
<span class="line"><span>this.beatCount++;</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    }, 5000);</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>onSocketOpen(ret:any) {</span></span>
<span class="line"><span>// @ts-ignore</span></span>
<span class="line"><span>    window.pgSocket.send(</span></span>
<span class="line"><span>JSON.stringify({</span></span>
<span class="line"><span>        module: &#39;pangu&#39;,</span></span>
<span class="line"><span>        msgType: 1,</span></span>
<span class="line"><span>        msgStr: {</span></span>
<span class="line"><span>// empId: 1,</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>      })</span></span>
<span class="line"><span>    );</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>onSocketError(ret:any) {</span></span>
<span class="line"><span>    console.log(ret);</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://pangu.kingtsoft.com/pangu-facade/assets/image1.b1f66964.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><blockquote><h4 id="技术原理" tabindex="-1"><a class="header-anchor" href="#技术原理"><span>技术原理</span></a></h4></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>组件交互图</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="http://pangu.kingtsoft.com/pangu-facade/assets/image2.f652bd0d.jpg" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>总共主要分为以下几个模块</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>pangu-frame-chat chat业务引用模块（可以当客户端） pangu-frame-chat-common chat标准常量及数据结构 pangu-frame-chat-api chat门面接口 pangu-frame-chat-center chat中心端引用模块 pangu-frame-netty ws的封装 pangu-frame-chat-server 集成ws与chat中心端的服务 pangu-frame-simple-test 业务模块代表，象征业务</p></blockquote><p><strong>pangu-frame-chat</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>    主要封装了chat交互的具体实现，例如使用了kafka作为媒介</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>pangu-frame-chat-common</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>    主要封装了对chat模块的各类常量及数据结构PgChatEntity与PgChatCenterEntity</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>pangu-frame-chat-api</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>    主要封装了业务端各类操作所需门面api</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>pangu-frame-chat-center</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>    为服务中心端实现，在PgChatCenterTemplate中有个topicCode参数，此参数与配置</span></span>
<span class="line"><span>文件kafka部分的topics中的key保持一致。里面提供了通用执行程序的api pgChatCenterApi，</span></span>
<span class="line"><span>只要平台端实现这个api就可以将消息中的数据自动传送到指定的api方法。如下</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>java</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package com.kingtsoft.pangu.frame.chat.server;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/**</span></span>
<span class="line"><span> * Title: &lt;br&gt;</span></span>
<span class="line"><span> * Description: &lt;br&gt;</span></span>
<span class="line"><span> * Company: KingTang &lt;br&gt;</span></span>
<span class="line"><span> *</span></span>
<span class="line"><span> * @author 金炀</span></span>
<span class="line"><span> * @version 1.0</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>@Component</span></span>
<span class="line"><span>public class  PgChatCenterHandlerimplementsPgChatCenterApi {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>private void   doProcess(PgChatCenterEntity pgChatCenterEntity) {</span></span>
<span class="line"><span>if (Objects.equals(pgChatCenterEntity.getMsgType(), PgChatConst.ChatCenterMsgType.TYPE_GROUP)) {</span></span>
<span class="line"><span>            WebSocketTemplate.sendWsMsgGroup(pgChatCenterEntity.getTopicCode(), pgChatCenterEntity.getContext());</span></span>
<span class="line"><span>return;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        List&lt;ChannelEntity&gt; entityList =</span></span>
<span class="line"><span>                ChatChannelHandler.getChannelByMeta(</span></span>
<span class="line"><span>                        (allList, mapList) -&gt; {</span></span>
<span class="line"><span>if (mapList ==null|| mapList.size() ==0) {</span></span>
<span class="line"><span>returnnew ArrayList&lt;&gt;(allList);</span></span>
<span class="line"><span>                            }</span></span>
<span class="line"><span>                            List&lt;ChannelEntity&gt; finList =new ArrayList&lt;&gt;();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>for (Map&lt;String, Object&gt; map : mapList) {</span></span>
<span class="line"><span>for (ChannelEntity channelEntity : allList) {</span></span>
<span class="line"><span>                                    Map&lt;String, Object&gt; channelMeta = channelEntity.getMetaInfo();</span></span>
<span class="line"><span>if (channelMeta ==null) {</span></span>
<span class="line"><span>continue;</span></span>
<span class="line"><span>                                    }</span></span>
<span class="line"><span>if (!Objects.equals(channelEntity.getModule(), pgChatCenterEntity.getTopicCode())) {</span></span>
<span class="line"><span>continue;</span></span>
<span class="line"><span>                                    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>for (String key : map.keySet()) {</span></span>
<span class="line"><span>if (Objects.equals(channelMeta.get(key), map.get(key))) {</span></span>
<span class="line"><span>                                            finList.add(channelEntity);</span></span>
<span class="line"><span>break;</span></span>
<span class="line"><span>                                        }</span></span>
<span class="line"><span>                                    }</span></span>
<span class="line"><span>                                }</span></span>
<span class="line"><span>                            }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>return finList;</span></span>
<span class="line"><span>                        }, pgChatCenterEntity.getMetaInfos());</span></span>
<span class="line"><span></span></span>
<span class="line"><span>for (ChannelEntity channelEntity : entityList) {</span></span>
<span class="line"><span>            WebSocketTemplate.sendWsMsg(channelEntity.getChannelId().aslong Text(), pgChatCenterEntity.getContext());</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>pangu-frame-netty</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>    此模块是针对ws具体实现的封装，支持WSS的的接入，但是经过测试，wss模式下无法使用私人生</span></span>
<span class="line"><span>成的证书。定义了数据结构ChatPojo与ChatBackPojo，前者为ws客户端发送信息到服务端的数据结</span></span>
<span class="line"><span>构，后者为服务端发送到客户端的数据结构。</span></span>
<span class="line"><span>    ChatPojo 中着重注意的为msgType，1-初始建立（用以互相保存相关信息，可以是业务关键信息，</span></span>
<span class="line"><span>例如empId,这样后续想通过empId进行发送的话就能以这些自定义信息为依据进行广播） 2-同组直接转</span></span>
<span class="line"><span>发（不经过业务后端，直接将信息转发给同模块下的客户端） 3-后端业务逻辑（通过消息去执行后端逻辑）</span></span>
<span class="line"><span>4-心跳检测。</span></span>
<span class="line"><span>四种类型核心代码如下</span></span>
<span class="line"><span>    客户端在建立连接后会执行一个额外的类型为1的信息（需要标记自身的module，与topic中的key</span></span>
<span class="line"><span>保持一致），用来告诉服务端对管道信息的保存及初始化，然后将初始化后的关键key发送给客户端进行</span></span>
<span class="line"><span>保存，后续的业务交互都需要附加这个key。</span></span>
<span class="line"><span>    查看private void   doProcess(ChannelHandlerContext ctx, String msgStr)可以</span></span>
<span class="line"><span>发现，在直连发送的情况之外的流程也就是msgType=2或3的情况都是由nettyProcessApi进行托管处理</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>java</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package com.kingtsoft.pangu.frame.netty;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import com.alibaba.fastjson2.JSON;</span></span>
<span class="line"><span>import com.kingtsoft.pangu.base.exception.TipException;</span></span>
<span class="line"><span>import com.kingtsoft.pangu.frame.netty.constant.ChatConst;</span></span>
<span class="line"><span>import io.netty.channel.ChannelHandlerContext;</span></span>
<span class="line"><span>import io.netty.channel.SimpleChannelInboundHandler;</span></span>
<span class="line"><span>import io.netty.handler.codec.http.FullHttpRequest;</span></span>
<span class="line"><span>import io.netty.handler.codec.http.websocketx.*;</span></span>
<span class="line"><span>import lombok.extern.slf4j.Slf4j;</span></span>
<span class="line"><span>import org.springframework.util.StringUtils;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/**</span></span>
<span class="line"><span> * Title: &lt;br&gt;</span></span>
<span class="line"><span> * Description: &lt;br&gt;</span></span>
<span class="line"><span> * Company: wondersgroup.com &lt;br&gt;</span></span>
<span class="line"><span> *</span></span>
<span class="line"><span> * @author 金炀</span></span>
<span class="line"><span> * @version 1.0</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>@Slf4j</span></span>
<span class="line"><span>public class  ChatWebSocketHandlerextendsSimpleChannelInboundHandler&lt;WebSocketFrame&gt; {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>private final   NettyProcessApi nettyProcessApi;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicChatWebSocketHandler(NettyProcessApi nettyProcessApi) {</span></span>
<span class="line"><span>this.nettyProcessApi = nettyProcessApi;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>private void   channelActive(ChannelHandlerContext ctx) throws Exception {</span></span>
<span class="line"><span>        log.info(&quot;客户端连接：{}&quot;, ctx.channel().id());</span></span>
<span class="line"><span>super.channelActive(ctx);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>private void   channelInactive(ChannelHandlerContext ctx) throws Exception {</span></span>
<span class="line"><span>        log.info(&quot;与客户端连接断开，通道关闭&quot;);</span></span>
<span class="line"><span>        ChatChannelHandler.removeChannel(ctx.channel().id());</span></span>
<span class="line"><span>super.channelInactive(ctx);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>private void   channelReadComplete(ChannelHandlerContext ctx) {</span></span>
<span class="line"><span>        ctx.channel().flush();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>protectedvoidchannelRead0(ChannelHandlerContext ctx, WebSocketFrame frame) {</span></span>
<span class="line"><span>if (frame instanceof PingWebSocketFrame) {</span></span>
<span class="line"><span>pingWebSocketFrameHandler(ctx, (PingWebSocketFrame) frame);</span></span>
<span class="line"><span>        } elseif (frame instanceof TextWebSocketFrame) {</span></span>
<span class="line"><span>textWebSocketFrameHandler(ctx, (TextWebSocketFrame) frame);</span></span>
<span class="line"><span>        } elseif (frame instanceof CloseWebSocketFrame) {</span></span>
<span class="line"><span>closeWebSocketFrameHandler(ctx, (CloseWebSocketFrame) frame);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>private void   channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {</span></span>
<span class="line"><span>//首次连接是FullHttpRequest，处理参数</span></span>
<span class="line"><span>if (msg instanceof FullHttpRequest) {</span></span>
<span class="line"><span>            FullHttpRequest request = (FullHttpRequest) msg;</span></span>
<span class="line"><span>            String uri = request.uri();</span></span>
<span class="line"><span>            WebSocketTemplate.sendWsMsg(ctx.channel(), &quot;汤小帅服务中心持续为您服务！&quot;);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>super.channelRead(ctx, msg);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 客户端发送断开请求处理</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>private void  closeWebSocketFrameHandler(ChannelHandlerContext ctx, CloseWebSocketFrame frame) {</span></span>
<span class="line"><span>        log.info(&quot;接收到主动断开请求：{}&quot;, ctx.channel().id());</span></span>
<span class="line"><span>        ctx.close();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 创建连接之后，客户端发送的消息都会在这里处理</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>private void  textWebSocketFrameHandler(ChannelHandlerContext ctx, TextWebSocketFrame frame) {</span></span>
<span class="line"><span>        String text = frame.text();</span></span>
<span class="line"><span>        ChatPoolUtil.POOL.execute(() -&gt;doProcess(ctx, text));</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 处理客户端心跳包</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>private void  pingWebSocketFrameHandler(ChannelHandlerContext ctx, PingWebSocketFrame frame) {</span></span>
<span class="line"><span>        ctx.channel().writeAndFlush(newPongWebSocketFrame(frame.content().retain()));</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>private void  doProcess(ChannelHandlerContext ctx, String msgStr) {</span></span>
<span class="line"><span>        ChatPojo chatPojo;</span></span>
<span class="line"><span>try {</span></span>
<span class="line"><span>            chatPojo = JSON.parseObject(msgStr, ChatPojo.class);</span></span>
<span class="line"><span>        } catch (Exception e) {</span></span>
<span class="line"><span>thrownewTipException(&quot;未知的消息结构体！&quot;);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if (nettyProcessApi ==null) {</span></span>
<span class="line"><span>thrownewTipException(&quot;无可用执行器！&quot;);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>switch (chatPojo.getMsgType()) {</span></span>
<span class="line"><span>case1:</span></span>
<span class="line"><span>                ChannelEntity channelEntity =newChannelEntity();</span></span>
<span class="line"><span>                channelEntity.setChannelId(ctx.channel().id());</span></span>
<span class="line"><span>                channelEntity.setModule(chatPojo.getModule());</span></span>
<span class="line"><span>                String meta = chatPojo.getMsgStr();</span></span>
<span class="line"><span>if (StringUtils.hasText(meta)) {</span></span>
<span class="line"><span>                    channelEntity.setMetaInfo(JSON.parseObject(meta));</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>                String key = ChatChannelHandler.addChannelId(channelEntity, ctx.channel());</span></span>
<span class="line"><span>                WebSocketTemplate.sendWsMsg(ctx.channel(), key, ChatConst.BackType.TYPE_CONNECT);</span></span>
<span class="line"><span>break;</span></span>
<span class="line"><span>case2:</span></span>
<span class="line"><span>                nettyProcessApi.doSameGroup(ctx, chatPojo);</span></span>
<span class="line"><span>break;</span></span>
<span class="line"><span>case3:</span></span>
<span class="line"><span>                nettyProcessApi.doProcess(ctx, chatPojo);</span></span>
<span class="line"><span>break;</span></span>
<span class="line"><span>case4:</span></span>
<span class="line"><span>                WebSocketTemplate.sendWsMsg(ctx.channel(), &quot;pong&quot;, ChatConst.BackType.TYPE_HEART_BEAT);</span></span>
<span class="line"><span>break;</span></span>
<span class="line"><span>default:</span></span>
<span class="line"><span>// 将客户端消息回送给客户端</span></span>
<span class="line"><span>                WebSocketTemplate.sendWsMsg(ctx.channel(), &quot;你发送的内容是：&quot;+ chatPojo.getMsgStr());</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>   ChatBackPojo 中的msgType为1-建立连接回调 2-回复信息（常规信息回复用以业务处理） 3-警告信息|错误反馈</span></span>
<span class="line"><span>（因为要与常规信息区分，有时候服务端的ws信息可能操作会出现异常，这时候会用3这个状态将异常信息反馈，客户端可以</span></span>
<span class="line"><span>自己考虑后续操作，比如可以message.warn到页面）</span></span>
<span class="line"><span>    同样提供了一个api nettyProcessApi提供平台整个的时候对具体后端业务进行实现，如下，可以发现两个接口最后都是</span></span>
<span class="line"><span>走的消息，且消息的主题默认为topic.pangu.center-cluster，可以通过pangu.chat.kafka.topic-center进行</span></span>
<span class="line"><span>设置。这里的通过kafka实现的，所有继续往下找kafka</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>java</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package com.kingtsoft.pangu.frame.chat.server;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import com.alibaba.fastjson2.JSON;</span></span>
<span class="line"><span>import com.kingtsoft.pangu.frame.chat.common.constant.PgChatConst;</span></span>
<span class="line"><span>import com.kingtsoft.pangu.frame.netty.*;</span></span>
<span class="line"><span>import io.netty.channel.ChannelHandlerContext;</span></span>
<span class="line"><span>import lombok.extern.slf4j.Slf4j;</span></span>
<span class="line"><span>import org.springframework.core.env.Environment;</span></span>
<span class="line"><span>import org.springframework.kafka.core.KafkaTemplate;</span></span>
<span class="line"><span>import org.springframework.kafka.support.KafkaHeaders;</span></span>
<span class="line"><span>import org.springframework.messaging.Message;</span></span>
<span class="line"><span>import org.springframework.messaging.MessageHeaders;</span></span>
<span class="line"><span>import org.springframework.messaging.support.GenericMessage;</span></span>
<span class="line"><span>import org.springframework.stereotype.Component;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.time.Clock;</span></span>
<span class="line"><span>import java.time.ZoneId;</span></span>
<span class="line"><span>import java.util.HashMap;</span></span>
<span class="line"><span>import java.util.Map;</span></span>
<span class="line"><span>import java.util.UUID;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/**</span></span>
<span class="line"><span> * Title: &lt;br&gt;</span></span>
<span class="line"><span> * Description: &lt;br&gt;</span></span>
<span class="line"><span> * Company: wondersgroup.com &lt;br&gt;</span></span>
<span class="line"><span> *</span></span>
<span class="line"><span> * @author 金炀</span></span>
<span class="line"><span> * @version 1.0</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>@Slf4j</span></span>
<span class="line"><span>@Component</span></span>
<span class="line"><span>public class  NettyProcessHandlerimplementsNettyProcessApi {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>privatestaticfinal Clock CLOCK = Clock.system(ZoneId.of(&quot;GMT+8&quot;));</span></span>
<span class="line"><span></span></span>
<span class="line"><span>private final   KafkaTemplate&lt;String, Object&gt; kafkaTemplate;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>private final   String topicCenter;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicNettyProcessHandler(Environment environment,</span></span>
<span class="line"><span>                               KafkaTemplate&lt;String, Object&gt; kafkaTemplate) {</span></span>
<span class="line"><span>this.topicCenter = environment.getProperty(&quot;pangu.chat.kafka.topic-center&quot;, PgChatConst.PG_TOPIC_CHAT_CLUSTER);</span></span>
<span class="line"><span>this.kafkaTemplate = kafkaTemplate;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>private void   doSameGroup(ChannelHandlerContext ctx, ChatPojo chatPojo) {</span></span>
<span class="line"><span>sendMsg(chatPojo, -1L);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 业务内容接口</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramctx      管道上下文信息</span></span>
<span class="line"><span>     * @paramchatPojo 交互信息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>private void   doProcess(ChannelHandlerContext ctx, ChatPojo chatPojo) {</span></span>
<span class="line"><span>sendMsg(chatPojo, -1L);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 发送信息</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramchatPojo 封装信息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>private void  sendMsg(ChatPojo chatPojo, long  timeout) {</span></span>
<span class="line"><span>if (timeout ==-1L) {</span></span>
<span class="line"><span>            timeout =null;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        Map&lt;String, Object&gt; map =new HashMap&lt;&gt;(8);</span></span>
<span class="line"><span>        map.put(KafkaHeaders.TOPIC, topicCenter);</span></span>
<span class="line"><span>        map.put(KafkaHeaders.KEY, createMsgKey());</span></span>
<span class="line"><span>        map.put(PgChatConst.ChatKafkaHeader.TIMEOUT, timeout);</span></span>
<span class="line"><span>        map.put(PgChatConst.ChatKafkaHeader.START_TIMESTAMP, CLOCK.millis());</span></span>
<span class="line"><span></span></span>
<span class="line"><span>try {</span></span>
<span class="line"><span>            Message&lt;String&gt; message =new GenericMessage&lt;&gt;(JSON.toJSONString(chatPojo), newMessageHeaders(map));</span></span>
<span class="line"><span>            kafkaTemplate.send(message);</span></span>
<span class="line"><span>        } catch (Exception e) {</span></span>
<span class="line"><span>            log.error(&quot;消息发送失败！&quot;, e);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicstatic String createMsgKey() {</span></span>
<span class="line"><span>return UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>    在chat-中心模块中，PgCenterClusterListenerImpl类是通过kafka的</span></span>
<span class="line"><span>配置化自动监听实现的，可以监听从netty模块中传播出来的业务处理信息，这么做</span></span>
<span class="line"><span>主要是用于解决分布式模式下的多实例，因为前端只会跟一台netty-server进行长</span></span>
<span class="line"><span>连接，而分布式模式下出于高可用及负载的考虑会存在多个实例，而此时需要通过每台</span></span>
<span class="line"><span>进行实例广播。我们通过消息广播实现了这个功能。</span></span>
<span class="line"><span>    这里默认也有一个timeout的处理，主要用于处理一些需要时效性的信息，可以</span></span>
<span class="line"><span>在发送的时候配置好头信息。这里会在接受到的时候自动丢弃</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>java</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package com.kingtsoft.pangu.frame.chat.center.kafka;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/**</span></span>
<span class="line"><span> * Title: &lt;br&gt;</span></span>
<span class="line"><span> * Description: &lt;br&gt;</span></span>
<span class="line"><span> * Company: KingTang &lt;br&gt;</span></span>
<span class="line"><span> *</span></span>
<span class="line"><span> * @author 金炀</span></span>
<span class="line"><span> * @version 1.0</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>@Slf4j</span></span>
<span class="line"><span>@Component(PgChatConst.ChatKafkaServiceCode.CODE_CENTER_CLUSTER)</span></span>
<span class="line"><span>public class  PgCenterClusterListenerImplimplementsPgKafkaBatchMessageService {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>privatestaticfinal Clock CLOCK = Clock.system(ZoneId.of(&quot;GMT+8&quot;));</span></span>
<span class="line"><span></span></span>
<span class="line"><span>private final   PgChatCenterApi pgChatCenterApi;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicPgCenterClusterListenerImpl(PgChatCenterApi pgChatCenterApi) {</span></span>
<span class="line"><span>this.pgChatCenterApi = pgChatCenterApi;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 业务端消息信息处理</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramdata 消息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>private void   doBatchMessageProcess(List&lt;ConsumerRecord&lt;String, String&gt;&gt; data) {</span></span>
<span class="line"><span>for (ConsumerRecord&lt;String, String&gt; record : data) {</span></span>
<span class="line"><span>            Optional&lt;String&gt; message = Optional.ofNullable(record.value());</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if (message.isEmpty()) {</span></span>
<span class="line"><span>                log.info(&quot;chat中心接受数据为空！&quot;);</span></span>
<span class="line"><span>return;</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if (record.headers() !=null) {</span></span>
<span class="line"><span>try {</span></span>
<span class="line"><span>                    Header header = record.headers().lastHeader(PgChatConst.ChatKafkaHeader.START_TIMESTAMP);</span></span>
<span class="line"><span>                    Header timeoutHeader = record.headers().lastHeader(PgChatConst.ChatKafkaHeader.TIMEOUT);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if (header !=null&amp;&amp; timeoutHeader !=null) {</span></span>
<span class="line"><span>long  startTimestamp = long .parselong (newString(header.value(), StandardCharsets.UTF_8));</span></span>
<span class="line"><span>long  timeout = long .parselong (newString(timeoutHeader.value(), StandardCharsets.UTF_8));</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if (startTimestamp + timeout &lt; CLOCK.millis()) {</span></span>
<span class="line"><span>continue;</span></span>
<span class="line"><span>                        }</span></span>
<span class="line"><span>                    }</span></span>
<span class="line"><span>                } catch (Exception ignore) {}</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>try {</span></span>
<span class="line"><span>                pgChatCenterApi.doCenterProcess(message.get());</span></span>
<span class="line"><span>            } catch (Exception e) {</span></span>
<span class="line"><span>                log.error(&quot;chat中心执行失败！&quot;, e);</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  封装了WebSocketTemplate可以便捷通过keys key或者组或者channel本身等关键内容对消息进行发送。</span></span>
<span class="line"><span>封装了管道缓存类ChatChannelHandler，代码如下，主要对管道组及channel信息进行了保存。其中保存形</span></span>
<span class="line"><span>式以ChannelEntity为主，管道本身注册在了ChannelGroup中，同module中都使用同一个ChannelGroup</span></span>
<span class="line"><span>保存。这样就更加自由的发挥自带的ChannelGroup优势，可以对同组进行批量处理。其中getChannelByMeta</span></span>
<span class="line"><span>就是提供自定义数据过滤的方法，这样业务与chat组件之间就不会产生耦合。而具体过滤方法也使用了函数式编程</span></span>
<span class="line"><span>让平台去自实现，也解耦了平台逻辑与chat组件逻辑。</span></span>
<span class="line"><span>（此模块连接的ws，在2小时没有动静的情况下，会监测一下，如果没响应，则会自动断开）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>java</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package com.kingtsoft.pangu.frame.netty;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import io.netty.channel.Channel;</span></span>
<span class="line"><span>import io.netty.channel.ChannelId;</span></span>
<span class="line"><span>import io.netty.channel.group.ChannelGroup;</span></span>
<span class="line"><span>import io.netty.channel.group.ChannelMatchers;</span></span>
<span class="line"><span>import io.netty.channel.group.DefaultChannelGroup;</span></span>
<span class="line"><span>import io.netty.util.concurrent.GlobalEventExecutor;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.util.List;</span></span>
<span class="line"><span>import java.util.Map;</span></span>
<span class="line"><span>import java.util.concurrent.ConcurrentHashMap;</span></span>
<span class="line"><span>import java.util.concurrent.atomic.AtomicReference;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/**</span></span>
<span class="line"><span> * Title: &lt;br&gt;</span></span>
<span class="line"><span> * Description: &lt;br&gt;</span></span>
<span class="line"><span> * Company: KingTang.com &lt;br&gt;</span></span>
<span class="line"><span> *</span></span>
<span class="line"><span> * @author 金炀</span></span>
<span class="line"><span> * @version 1.0</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>public class  ChatChannelHandler {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicstatic Map&lt;String, ChannelGroup&gt; channelGroupMap =new ConcurrentHashMap&lt;&gt;(16);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicstatic Map&lt;String, ChannelEntity&gt; channelInfoMap =new ConcurrentHashMap&lt;&gt;(32);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicstatic String addChannelId(ChannelEntity channelEntity, Channel channel) {</span></span>
<span class="line"><span>        String key = channel.id().aslong Text();</span></span>
<span class="line"><span>// 处理通道组</span></span>
<span class="line"><span>if (channelGroupMap.get(channelEntity.getModule()) ==null) {</span></span>
<span class="line"><span>            ChannelGroup moduleGroup =newDefaultChannelGroup(GlobalEventExecutor.INSTANCE);</span></span>
<span class="line"><span>            moduleGroup.add(channel);</span></span>
<span class="line"><span>            channelGroupMap.put(channelEntity.getModule(), moduleGroup);</span></span>
<span class="line"><span>        } else {</span></span>
<span class="line"><span>            channelGroupMap.get(channelEntity.getModule()).add(channel);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if (channelInfoMap.get(key) ==null) {</span></span>
<span class="line"><span>            channelInfoMap.put(key, channelEntity);</span></span>
<span class="line"><span>        } else {</span></span>
<span class="line"><span>// 说明有意料之外的管道信息，需要切断替换为新的</span></span>
<span class="line"><span>            ChannelGroup channelGroup = channelGroupMap.get(channelEntity.getModule());</span></span>
<span class="line"><span>if (channelGroup !=null) {</span></span>
<span class="line"><span>                Channel ch = channelGroup.find(channelInfoMap.get(key).getChannelId());</span></span>
<span class="line"><span>                channelGroup.disconnect(ChannelMatchers.is(ch));</span></span>
<span class="line"><span>                channelGroup.remove(ch);</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            channelInfoMap.put(key, channelEntity);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>return key;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicstaticvoidremoveChannel(ChannelId channelId) {</span></span>
<span class="line"><span>        ChannelEntity channelEntity = channelInfoMap.get(channelId.aslong Text());</span></span>
<span class="line"><span>if (channelEntity ==null) {</span></span>
<span class="line"><span>return;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        channelInfoMap.remove(channelId.aslong Text());</span></span>
<span class="line"><span>        ChannelGroup channelGroup = channelGroupMap.get(channelEntity.getModule());</span></span>
<span class="line"><span>if (channelGroup ==null) {</span></span>
<span class="line"><span>return;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        Channel ch = channelGroup.find(channelId);</span></span>
<span class="line"><span>if (ch ==null) {</span></span>
<span class="line"><span>return;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        channelGroup.disconnect(ChannelMatchers.is(ch));</span></span>
<span class="line"><span>        channelGroup.remove(ch);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicstatic Channel getChannel(String key) {</span></span>
<span class="line"><span>        ChannelEntity channelEntity = channelInfoMap.get(key);</span></span>
<span class="line"><span>if (channelEntity ==null) {</span></span>
<span class="line"><span>returnnull;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        ChannelGroup channelGroup = channelGroupMap.get(channelEntity.getModule());</span></span>
<span class="line"><span>if (channelGroup ==null) {</span></span>
<span class="line"><span>returnnull;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>return channelGroup.find(channelEntity.getChannelId());</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicstatic Channel getChannel(ChannelId channelId) {</span></span>
<span class="line"><span>        AtomicReference&lt;Channel&gt; channel =new AtomicReference&lt;&gt;();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        channelGroupMap.forEach(</span></span>
<span class="line"><span>                (k, group) -&gt; {</span></span>
<span class="line"><span>if (channel.get() ==null&amp;&amp; group.find(channelId) !=null) {</span></span>
<span class="line"><span>                        channel.set(group.find(channelId));</span></span>
<span class="line"><span>                    }</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>        );</span></span>
<span class="line"><span></span></span>
<span class="line"><span>return channel.get();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicstatic ChannelGroup getChannelGroup(String key) {</span></span>
<span class="line"><span>        ChannelEntity channelEntity = channelInfoMap.get(key);</span></span>
<span class="line"><span>if (channelEntity ==null) {</span></span>
<span class="line"><span>returnnull;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>return channelGroupMap.get(channelEntity.getModule());</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicstatic List&lt;ChannelEntity&gt; getChannelByMeta(ChatChannelFun chatChannelFun, List&lt;Map&lt;String, Object&gt;&gt; mapList) {</span></span>
<span class="line"><span>return chatChannelFun.getChannelEntity(channelInfoMap.values(), mapList);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>pangu-frame-chat-server</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>    模块主要整个netty模块及业务模块，netty中的ws是实现，而server模块则是整合这个实现与kafka，</span></span>
<span class="line"><span>通过kafka与业务沟通，kafka api与ws业务无关。所有这里就算以后整合额外的长连接方式也是支持的。</span></span>
<span class="line"><span>主要作用就是接收后端信息，并进行转发，而前端是ws业务，与netty是一对的，所以操作集成在netty里而</span></span>
<span class="line"><span>不是像后端一样集成在server端。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>pangu-frame-simple-test</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>    这代表了业务模块，主要配置的是监听事件，需要引入的包如下</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>xml</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;com.kingtsoft.pangu&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;pangu-frame-chat-api&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>pangu-frame-simple-test</strong>所属启动器加入如下实现</p><p><strong>xml</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;com.kingtsoft.pangu&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;pangu-frame-chat&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>    然后只需实现PgChatClientApi接口，即可直接实现数据监听回调监听,监听信息放入</span></span>
<span class="line"><span>在了配置文件内。所以将代码与具体实现进行了剥离。后续更换实现载体将不会影响倒业务代码。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>java</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package com.kingtsoft.pangu.frame.simple.test.listener;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import com.kingtsoft.pangu.frame.chat.api.PgChatClientApi;</span></span>
<span class="line"><span>import com.kingtsoft.pangu.frame.chat.api.PgChatTemplate;</span></span>
<span class="line"><span>import com.kingtsoft.pangu.frame.chat.common.PgChatEntity;</span></span>
<span class="line"><span>import lombok.extern.slf4j.Slf4j;</span></span>
<span class="line"><span>import org.springframework.stereotype.Component;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.util.HashMap;</span></span>
<span class="line"><span>import java.util.List;</span></span>
<span class="line"><span>import java.util.Map;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/**</span></span>
<span class="line"><span> * Title: &lt;br&gt;</span></span>
<span class="line"><span> * Description: &lt;br&gt;</span></span>
<span class="line"><span> * Company: KingTang &lt;br&gt;</span></span>
<span class="line"><span> *</span></span>
<span class="line"><span> * @author 金炀</span></span>
<span class="line"><span> * @version 1.0</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>@Slf4j</span></span>
<span class="line"><span>@Component</span></span>
<span class="line"><span>public class  PgChatClientImplimplementsPgChatClientApi {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>private final   PgChatTemplate pgChatTemplate;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>publicPgChatClientImpl(PgChatTemplate pgChatTemplate) {</span></span>
<span class="line"><span>this.pgChatTemplate = pgChatTemplate;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 业务端消息信息处理</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @paramchatList 消息</span></span>
<span class="line"><span>     * @author 金炀</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>private void   doChatProcess(List&lt;PgChatEntity&gt; chatList) {</span></span>
<span class="line"><span>for (PgChatEntity pgChatEntity : chatList) {</span></span>
<span class="line"><span>try {</span></span>
<span class="line"><span>                System.out.println(pgChatEntity.getContext());</span></span>
<span class="line"><span></span></span>
<span class="line"><span>                Map&lt;String, Object&gt; m =new HashMap&lt;&gt;(4);</span></span>
<span class="line"><span>                m.put(&quot;empId&quot;, 1);</span></span>
<span class="line"><span>                pgChatTemplate.sendChat(&quot;pangu&quot;, &quot;群发了&quot;, 1, m);</span></span>
<span class="line"><span>            } catch (Exception e) {</span></span>
<span class="line"><span>                log.error(&quot;日志业务端数据处理失败！&quot;, e);</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>而业务中信息发送所需的为pgChatTemplate，直接注入即可。上图中,注释掉部分为信息发送，主要参数如下</span></span>
<span class="line"><span>    topicCode           	与之前平台端配置文件中pangu.kafka.topics中的key匹配</span></span>
<span class="line"><span>    context 			消息体，建议是业务自己统一的结构体</span></span>
<span class="line"><span>    msgType 		1-转发指定客户端 2-同组转发</span></span>
<span class="line"><span>    Map&lt;String, Object&gt; metaInfo 附加信息（一般用于过滤，比如我们要发送empId为1的客户端信息，</span></span>
<span class="line"><span>则如上图所示，加入入参即可。里面的数据在初始化时候客户端传入存储即可）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,65)]))}const t=s(l,[["render",p],["__file","chat模块.html.vue"]]),r=JSON.parse('{"path":"/%E7%9B%98%E5%8F%A4/%E7%BB%84%E4%BB%B6%E4%BB%8B%E7%BB%8D/chat%E6%A8%A1%E5%9D%97.html","title":"chat模块","lang":"zh-CN","frontmatter":{"description":"chat模块 如何使用 xml xml java java yaml yaml typescript image.pngimage.png 技术原理 image.pngimage.png pangu-frame-chat chat业务引用模块（可以当客户端） pangu-frame-chat-common chat标准常量及数据结构 pangu-fra...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/%E7%9B%98%E5%8F%A4/%E7%BB%84%E4%BB%B6%E4%BB%8B%E7%BB%8D/chat%E6%A8%A1%E5%9D%97.html"}],["meta",{"property":"og:title","content":"chat模块"}],["meta",{"property":"og:description","content":"chat模块 如何使用 xml xml java java yaml yaml typescript image.pngimage.png 技术原理 image.pngimage.png pangu-frame-chat chat业务引用模块（可以当客户端） pangu-frame-chat-common chat标准常量及数据结构 pangu-fra..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://pangu.kingtsoft.com/pangu-facade/assets/image1.b1f66964.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-18T07:25:41.000Z"}],["meta",{"property":"article:author","content":"Cotton Eye Joe"}],["meta",{"property":"article:modified_time","content":"2024-11-18T07:25:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"chat模块\\",\\"image\\":[\\"http://pangu.kingtsoft.com/pangu-facade/assets/image1.b1f66964.png\\",\\"http://pangu.kingtsoft.com/pangu-facade/assets/image2.f652bd0d.jpg\\"],\\"dateModified\\":\\"2024-11-18T07:25:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cotton Eye Joe\\",\\"url\\":\\"https://github.com/ToDreamr\\"}]}"]]},"headers":[],"git":{"createdTime":1731914741000,"updatedTime":1731914741000,"contributors":[{"name":"九歌天上有","email":"aruixrain@gmail.com","commits":1}]},"readingTime":{"minutes":15.28,"words":4585},"filePathRelative":"盘古/组件介绍/chat模块.md","localizedDate":"2024年11月18日","excerpt":"","autoDesc":true}');export{t as comp,r as data};
